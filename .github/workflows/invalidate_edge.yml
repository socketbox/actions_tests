name: Invalidate Edge Cache
on:
  workflow_dispatch:
    inputs:
      paths:
        description: 'Space-delimited paths to invalidate'
        type: string
        default: |
          /explore*
          /livestream*
          /show*
          /my-station*
          /_next*
          /video*
          /search*
          /api*
          /
      production:
        description: 'Invalidate production dist.'
        default: false
        type: boolean
      staging:
        description: 'Invalidate staging dist.'
        type: boolean
        default: true
      confirmation:
        description: "Confirm production invalidation"
        required: false
        type: boolean
        default: false

  workflow_call:
    inputs:
      paths:
        description: 'Space-delimited paths to invalidate'
        type: string
        default: |
          /explore* 
          /livestream* 
          /show* 
          /my-station* 
          /_next* 
          /video* 
          /search* 
          /api* 
          /
      production:
        description: 'Invalidate production dist.'
        default: false
        type: boolean
      staging:
        description: 'Invalidate staging dist.'
        type: boolean
        default: true
      confirmation:
        description: "Confirm production invalidation"
        required: false
        type: boolean
        default: false

permissions:
  #actions: read
  id-token: write
  #contents: write
  #packages: write

jobs:
  # because of limitations in jobs.<job>.if
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      #https://github.com/actions/github-script?tab=readme-ov-file#reading-step-results
      edges: ${{steps.build-matrix.outputs.result}}
    steps:
      - name: Build matrix
        uses: actions/github-script@v7
        id: build-matrix
        with:
          script: |
            const production = inputs.production;
            const confirmation = inputs.confirmation;
            const staging = inputs.staging; 
            console.log("production: " + production)
            console.log("confirmation: " + confirmation)
            console.log("staging: " + staging)
            const edges = [];
            if (production === 'true' && confirmation === 'true') {
              edges.push('pbs-digi-prod');
            }
            if (staging === 'true') {
              edges.push('pbs-digi-preprod');
            }
            console.log("edges: " + edges)
            return edges;
          result-encoding: json
